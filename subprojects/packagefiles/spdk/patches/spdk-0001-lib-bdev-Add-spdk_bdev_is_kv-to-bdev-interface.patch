From c63e4157923080d62b283bd51241174b5e943dc0 Mon Sep 17 00:00:00 2001
From: Karl Bonde Torp <k.torp@samsung.com>
Date: Tue, 19 Sep 2023 10:08:29 +0200
Subject: [PATCH 1/4] lib/bdev: Add spdk_bdev_is_kv() to bdev interface

This patch is needed to enable KV passthru on fabrics, specifically to
set the correct csi when the namespace is added to nvmf/subsystem.

spdk_bdev_is_kv() will allow user to check if a
bdev is a kv bdev.

Signed-off-by: Karl Bonde Torp <k.torp@samsung.com>
---
 include/spdk/bdev.h        | 8 ++++++++
 include/spdk/bdev_module.h | 5 +++++
 lib/bdev/bdev.c            | 6 ++++++
 lib/nvmf/ctrlr.c           | 3 +++
 4 files changed, 22 insertions(+)

diff --git a/include/spdk/bdev.h b/include/spdk/bdev.h
index 02fc06590..a1f78d355 100644
--- a/include/spdk/bdev.h
+++ b/include/spdk/bdev.h
@@ -687,6 +687,14 @@ bool spdk_bdev_is_md_interleaved(const struct spdk_bdev *bdev);
  */
 bool spdk_bdev_is_md_separate(const struct spdk_bdev *bdev);
 
+/**
+ * Checks if bdev supports KV namespace semantics.
+ *
+ * \param bdev Block device to query.
+ * \return true if device supports KV namespace semantics.
+ */
+bool spdk_bdev_is_kv(const struct spdk_bdev *bdev);
+
 /**
  * Checks if bdev supports zoned namespace semantics.
  *
diff --git a/include/spdk/bdev_module.h b/include/spdk/bdev_module.h
index b5dd04bb4..92a1ae5f1 100644
--- a/include/spdk/bdev_module.h
+++ b/include/spdk/bdev_module.h
@@ -558,6 +558,11 @@ struct spdk_bdev {
 	 */
 	uint32_t dif_check_flags;
 
+	/**
+	 * Specify whether bdev is kv device.
+	 */
+	bool kv;
+
 	/**
 	 * Specify whether bdev is zoned device.
 	 */
diff --git a/lib/bdev/bdev.c b/lib/bdev/bdev.c
index 8daa452f0..e0008fd32 100644
--- a/lib/bdev/bdev.c
+++ b/lib/bdev/bdev.c
@@ -4777,6 +4777,12 @@ spdk_bdev_is_md_separate(const struct spdk_bdev *bdev)
 	return (bdev->md_len != 0) && !bdev->md_interleave;
 }
 
+bool
+spdk_bdev_is_kv(const struct spdk_bdev *bdev)
+{
+	return bdev->kv;
+}
+
 bool
 spdk_bdev_is_zoned(const struct spdk_bdev *bdev)
 {
diff --git a/lib/nvmf/ctrlr.c b/lib/nvmf/ctrlr.c
index 5931303f0..eb585a00c 100644
--- a/lib/nvmf/ctrlr.c
+++ b/lib/nvmf/ctrlr.c
@@ -3116,6 +3116,9 @@ nvmf_ctrlr_identify_iocs(struct spdk_nvmf_ctrlr *ctrlr,
 		if (spdk_bdev_is_zoned(ns->bdev)) {
 			vector->zns = 1;
 		}
+		if (spdk_bdev_is_kv(ns->bdev)){
+			vector->kv = 1;
+		}
 	}
 
 	rsp->status.sct = SPDK_NVME_SCT_GENERIC;
-- 
2.44.0

